@model IEnumerable<Batates.Models.Product>
@{
    var currRestaurant = (Restaurant)ViewBag.Restaurant;
    ViewData["Title"] = currRestaurant.Name;

    if (currRestaurant.locationLat is null)
    {
        currRestaurant.locationLat = 0;
    }
    if (currRestaurant.locationLong is null)
    {
        currRestaurant.locationLong = 0;
    }
}
<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 align-items-center my-5">
        <div class="col-lg-5">
            <h1 class="font-weight-light">@currRestaurant.Name</h1>
            <p>@currRestaurant.Description</p>
            <div class="d-flex justify-content-between align-items-end">
                <a class="btn btn-primary" href="tel:@currRestaurant.ContactNo">
                    <i class="bi bi-telephone-fill"></i>
                    Contact
                </a>
                <h5><span id="distance" class="badge bg-dark">Distance: Calculating...</span></h5>
            </div>
            <div>
                <div id="map" class="mt-3"></div>
            </div>
        </div>
        <div class="col-lg-7"><img class="img-fluid rounded mb-4 mb-lg-0" src="@(currRestaurant.ImageURL ?? "https://dummyjson.com/image/600x400")" alt="..." /></div>
    </div>
    <div class="row gx-4 gx-lg-5">
        @foreach(var item in Model)
        {
            <div class="col-12 mb-1">
                <div class="card">
                        <partial name="../Product/_ProductPartial" model="item" />
                </div>
            </div>
        }
    </div>
</div>

<style>
    #map {
        height: 200px;
    }
    .leaflet-touch .leaflet-control-attribution, .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
        display: none;
    }

    .leaflet-right{
        width: 100%;
        height: 99%;
        text-align: center;
    }

    .leaflet-control {
        width: 90%;
        height: 99%;
        text-align: center;
    }
    .card-body:hover {
        background: var(--bs-secondary-bg);
    }

    .product_image {
        max-height: 128px;
        width: auto;
    }
</style>


@section Scripts
{
    <script>
        var map = L.map('map');

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        navigator.geolocation.getCurrentPosition(function (position) {
            var lat = position.coords.latitude;
            var lng = position.coords.longitude;

            var destinationLat = @currRestaurant.locationLat;
            var destinationLng = @currRestaurant.locationLong;
            if (destinationLat === 0 && destinationLng === 0) {
                // Add overlay for "NO LOCATION" if user's location is not available
                L.Control.NoLocation = L.Control.extend({
                    onAdd: function (map) {
                        var div = L.DomUtil.create('div', 'leaflet-control-no-location');
                        div.innerHTML = '';
                        return div;
                    }
                });

                L.control.noLocation = function (opts) {
                    return new L.Control.NoLocation(opts);
                };

                L.control.noLocation({ position: 'topright' }).addTo(map);
                document.getElementById('distance').innerText = 'NO LOCATION FOR RESTAURANT';

            } else {
                var userMarker = L.marker([lat, lng]).addTo(map);
                userMarker.bindPopup("Your Location").openPopup();

                var destinationMarker = L.marker([destinationLat, destinationLng]).addTo(map);
                destinationMarker.bindPopup("Destination").openPopup();

                var path = L.polyline([
                    [lat, lng],
                    [destinationLat, destinationLng]
                ], { color: 'red' }).addTo(map);

                var bounds = L.latLngBounds([[lat, lng], [destinationLat, destinationLng]]);
                map.fitBounds(bounds);

                document.getElementById('distance').innerText = 'Distance: ' + calculateDistance(lat, lng, destinationLat, destinationLng).toFixed(2) + ' km';
            }
        });
        function calculateDistance(lat1, lon1, lat2, lon2) {
            var R = 6371; // Radius of the Earth in kilometers
            var dLat = (lat2 - lat1) * Math.PI / 180;
            var dLon = (lon2 - lon1) * Math.PI / 180;
            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                Math.sin(dLon / 2) * Math.sin(dLon / 2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c; // Distance in kilometers
            return d;
        }
    </script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="~/js/cart.js"></script>
    <script src="~/js/wishlist.js"></script>

}